// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  passwordHash  String?
  accounts      Account[]
  sessions      Session[]
  calculations  Calculation[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


// Dummy comment to force Vercel rebuild

model Calculation {
  id                   String   @id @default(cuid())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  // Basic Information
  companyName         String
  scope               String
  standard            String
  auditType           String
  category            String
  
  // Numerical Inputs
  employees           Int
  sites               Int
  haccpStudies        Int
  riskLevel           String
  
  // Arrays stored as JSON
  integratedStandards Json     @default("[]")
  
  // Results
  result              Float
  breakdown           Json?
  
  // Additional calculated fields
  stage1ManDays       Float?
  stage2ManDays       Float?
  surveillanceManDays Float?
  recertificationManDays Float?
  
  // Metadata
  isDeleted           Boolean  @default(false)
  userId              String
  user                User     @relation(fields: [userId], references: [id])
  
  @@map("calculations")
}

model AdminConfig {
  id                   String   @id @default(cuid())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  // Configuration name
  name                String   @unique
  
  // Base man-days configuration
  baseManDays         Json     // Store as JSON for flexibility
  
  // Employee ranges configuration
  employeeRanges      Json     // Store as JSON for flexibility
  
  // Risk multipliers
  riskMultipliers     Json     // Store as JSON for flexibility
  
  // Other multipliers
  haccpMultiplier     Float    @default(0.5)
  multiSiteMultiplier Float    @default(0.5)
  integratedSystemReduction Float @default(0.1)
  
  // Metadata
  isActive            Boolean  @default(true)
  description         String?
  
  @@map("admin_configs")
}

model AuditLog {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  
  action      String   // CREATE, UPDATE, DELETE, EXPORT, etc.
  entityType  String   // CALCULATION, CONFIG, etc.
  entityId    String?
  details     Json?
  ipAddress   String?
  userAgent   String?
  
  @@map("audit_logs")
}